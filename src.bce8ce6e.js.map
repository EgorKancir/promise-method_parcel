{"version":3,"sources":["src/index.js"],"names":["delayedPromise","content","delay","Promise","resolve","setTimeout","promiseA","promiseB","promiseC","promiseD","promiseE","randomDelay","Math","floor","random","all","then","value","console","log","catch","error","playerPromis1","playerPromis2","playerPromis3","playerPromis4","playerPromis5","race","concat"],"mappings":";AAMA,SAASA,EAAeC,EAASC,GAC7B,OAAO,IAAIC,QAAQ,SAAAC,GACfC,WAAW,WACPD,EAAQH,IACTC,KAIX,IAAMI,EAAWN,EAAe,QAAS,KACnCO,EAAWP,EAAe,QAAS,KACnCQ,EAAWR,EAAe,QAAS,KACnCS,EAAWT,EAAe,QAAS,KACnCU,EAAWV,EAAe,QAAS,KAiBzC,SAASW,EAAYV,GACjB,OAAO,IAAIE,QAAQ,SAAAC,GACf,IAAIF,EAAQU,KAAKC,MAAuB,KAAjBD,KAAKE,SAA+B,KAC3DT,WAAW,WACPD,EAAQH,IACTC,KApBXC,QAAQY,IAAI,CAACT,EAAUC,EAAUC,EAAUC,EAAUC,IAChDM,KAAK,SAAAC,GAAUC,QAAQC,IAAIF,KAC3BG,MAAM,SAAAC,GAAUH,QAAQG,MAAMA,KAsBnC,IAAMC,EAAgBX,EAAY,mBAC5BY,EAAgBZ,EAAY,mBAC5Ba,EAAgBb,EAAY,mBAC5Bc,EAAgBd,EAAY,mBAC5Be,EAAgBf,EAAY,mBAElCR,QAAQwB,KAAK,CAACL,EAAeC,EAAeC,EAAeC,EAAeC,IACrEV,KAAK,SAAAC,GAAUC,QAAQC,IAAGS,cAAAA,OAAeX,EAAW,WACpDG,MAAM,SAAAC,GAAUH,QAAQG,MAAMA","file":"src.bce8ce6e.js","sourceRoot":"..","sourcesContent":["// |---------------------------------------------------------------------------|\n// Завдання 1\n\n// \"Порівняння кількох промісів\"\n\n// >>>>>\nfunction delayedPromise(content, delay) {\n    return new Promise(resolve => {\n        setTimeout(() => {\n            resolve(content);\n        }, delay)\n    })\n}\n\nconst promiseA = delayedPromise(\"<<A>>\", 1000);\nconst promiseB = delayedPromise(\"<<B>>\", 2000);\nconst promiseC = delayedPromise(\"<<C>>\", 3000);\nconst promiseD = delayedPromise(\"<<D>>\", 4000);\nconst promiseE = delayedPromise(\"<<E>>\", 5000);\n\nPromise.all([promiseA, promiseB, promiseC, promiseD, promiseE])\n    .then(value => {console.log(value)})\n    .catch(error => {console.error(error)});\n// <<<<<\n\n\n\n// |---------------------------------------------------------------------------|\n\n\n\n// Завдання 2\n\n// \"Змагання промісів\"\n// >>>>>\nfunction randomDelay(content) {\n    return new Promise(resolve => {\n        let delay = Math.floor(Math.random() * (5000 - 1000 + 1) + 1000);\n        setTimeout(() => {\n            resolve(content)\n        }, delay);\n    })\n}\n\nconst playerPromis1 = randomDelay(\"1 Player Promis\");\nconst playerPromis2 = randomDelay(\"2 Player Promis\");\nconst playerPromis3 = randomDelay(\"3 Player Promis\");\nconst playerPromis4 = randomDelay(\"4 Player Promis\");\nconst playerPromis5 = randomDelay(\"5 Player Promis\");\n\nPromise.race([playerPromis1, playerPromis2, playerPromis3, playerPromis4, playerPromis5])\n    .then(value => {console.log(`Winner >>> ${value} <<<`)})\n    .catch(error => {console.error(error)});\n// <<<<<\n\n// |---------------------------------------------------------------------------|"]}